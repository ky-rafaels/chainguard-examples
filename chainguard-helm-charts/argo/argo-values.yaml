global:
  image:
    repository: cgr.dev/ky-rafaels.example.com/argocd
    tag: 2.14.3
  # -- Secrets with credentials to pull images from a private registry
  # imagePullSecrets:
  #   - "regcred"
repoServer:
  image:
    repository: cgr.dev/ky-rafaels.example.com/argocd-repo-server
    tag: 2.14.3
  extraContainers:
  - name: helm-plugin
    command: [/var/run/argocd/argocd-cmp-server]
    args: [--loglevel, debug]
    image: cgr.dev/ky-rafaels.example.com/custom-base
    securityContext:
      runAsNonRoot: true
      # runAsUser: 999 # container already runs as nonroot by default 
    volumeMounts:
      - mountPath: /var/run/argocd
        name: var-files
      - mountPath: /home/argocd/cmp-server/plugins
        name: plugins
      - mountPath: /helm-working-dir
        name: helm-plugin-tmp
      - mountPath: /home/argocd/cmp-server/config/plugin.yaml
        subPath: plugin.yaml
        name: helm-plugin-config
      # - mountPath: /var/run/argocd/helm-plugin/generate.sh
      #   subPath: generate.sh
      #   name: helm-plugin-config
      # - mountPath: /var/run/argocd/helm-plugin/get-parameters.sh
      #   subPath: get-parameters.sh
      #   name: helm-plugin-config
  volumes:
  - name: oidc-token
    projected:
      sources:
      - serviceAccountToken:
          path: oidc-token
          expirationSeconds: 3600
          audience: <>
  - configMap:
      name: helm-plugin-config
    name: helm-plugin-config
  - emptyDir: {}
    name: helm-plugin-tmp
  - emptyDir: {}
    name: helm-plugin-tools
    # mount an oidc token into repo-server?
  # volumeMounts:
  # - name: oidc-token
  #   mountPath: /var/run/secrets/tokens
  #   readOnly: true
dex:
  image:
    repository: cgr.dev/ky-rafaels.example.com/dex
    tag: 2.42
redis:
  image:
    repository: cgr.dev/ky-rafaels.example.com/redis
    tag: 7.2.7
server:
  extraArgs:
  - --insecure
crds:
  install: true